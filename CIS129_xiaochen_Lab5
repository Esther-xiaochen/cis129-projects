#Module 5 Lab-5
#Author: Xiaochen zhang
#2024/6/28
#Repetition Structures

# Lab 5 The Bottle Return Program

def main():
    # Step 1: Declare variables below 
    totalBottles = 0
    todayBottles = 0
    totalPayout = 0.0
    counter = 1
    keepGoing = 'y'

    # Step 2: Loop to run program again
    while keepGoing == 'y':
    
        # Step 3: Code to set value of variables
        totalBottles = getBottles(counter)
        totalPayout = calcPayout(totalBottles)
        printInfo(totalBottles, totalPayout)
        print("\n")
        keepGoing = input("Do you want to enter another week's worth of data? (Enter y or n): ")
        print("\n")


def getBottles(counter):
    # Function to collect bottles returned each day for a week (7 days)
    NBR_OF_DAYS = 7
    totalBottles = 0
    todayBottles = 0 
    counter = 1

    while counter <= NBR_OF_DAYS:
        #print("Enter number of bottles returned for day #" , counter,":")
        #input (counter)
        todayBottles = int(input(f"Enter number of bottles for day #{counter}: "))
        totalBottles += todayBottles
        counter += 1

    return totalBottles


def calcPayout(totalBottles):
    # Function to calculate payout based on total bottles returned
    PAYOUT_PER_BOTTLE = 0.10
    totalPayout = 0
    totalPayout = totalBottles * PAYOUT_PER_BOTTLE
    return totalPayout


def printInfo(totalBottles, totalPayout):
    # Function to print the total number of bottles collected and total payout
    print("\n")
    print("The total number of bottles collected is", totalBottles)
    print(f"The total paid out is $ {totalPayout:.1f}")
    
    # 将小数保留一位小数并输出
    #formatted_number = f"{number:.1f}"
    #print(f"保留一位小数的结果为：{formatted_number}")

if __name__ == "__main__":
    main()
